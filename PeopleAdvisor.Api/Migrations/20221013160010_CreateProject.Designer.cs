// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PeopleAdvisor.Infrastructure.Data;

#nullable disable

namespace PeopleAdvisor.Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221013160010_CreateProject")]
    partial class CreateProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PeopleAdvisor.Domain.Entities.Experience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("Date");

                    b.Property<string>("Title")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Experience", (string)null);
                });

            modelBuilder.Entity("PeopleAdvisor.Domain.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Country")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("Date");

                    b.Property<string>("Currency")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<double?>("CurrentSalary")
                        .HasColumnType("double precision");

                    b.Property<string>("Degree")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<string>("Email")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<int?>("ExperienceYears")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Gender")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Languages")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Linkedin")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("NoticePeriod")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ParsedResume")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<bool?>("RemoteOnly")
                        .HasColumnType("boolean");

                    b.Property<string>("Role")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<string>("School")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<string>("Sector")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<string>("Skills")
                        .HasColumnType("text");

                    b.Property<string>("StudyLevel")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Profile", (string)null);
                });

            modelBuilder.Entity("PeopleAdvisor.Domain.Entities.Experience", b =>
                {
                    b.HasOne("PeopleAdvisor.Domain.Entities.Profile", "Profile")
                        .WithMany("Experiences")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("PeopleAdvisor.Domain.Entities.Profile", b =>
                {
                    b.Navigation("Experiences");
                });
#pragma warning restore 612, 618
        }
    }
}
